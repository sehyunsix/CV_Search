name: Docker Compose Deploy to NCP in dev_typescript branch
run-name: Deploying to NCP in dev_typescript branch

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: '실행할 작업'
        required: true
        default: 'deploy'
        type: choice
        options:
          - 'deploy'
          - 'restart'
          - 'stop'
          - 'update'

jobs:
  build-and-push:
    name: 이미지 빌드 및 푸시
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 백엔드 Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/crawl-server:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/crawl-server:latest

  deploy:
    name: NCP 서버 배포
    runs-on: ubuntu-latest
    # build-and-push가 실행되지 않아도 계속 실행되도록 optional dependency 설정
    needs: [build-and-push]
    if: always()  # build-and-push가 skip 되어도 실행
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: 현재 디렉토리 파일 목록 확인
        run: ls -la

      - name: 환경 변수 적용 - docker-compose.yml 업데이트
        run: cat docker-compose.yml

      - name: CV_Search 디렉토리 생성 및 이동
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            mkdir -p ~/CV_Search
            rm -f ~/CV_Search/docker-compose.yml
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: docker-compose 파일 전송 및 배포
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          source: "./docker-compose.yml"
          target: "~/CV_Search/"
          overwrite: true

      - name: 배포 실행 및 확인
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            set -e
            cd ~/CV_Search

            echo "[1/6] 이미지 Pull"
            docker-compose pull crawl

            echo "[2/6] 기존 컨테이너 중단 및 제거
            docker-compose down crawl

            echo "[3/6] 새로운 컨테이너 실행"
            docker-compose up -d

            echo "[4/6] 불필요한 이미지 정리"
            docker image prune -f

            echo "[5/6] 실행 상태 확인"
            docker-compose ps

            echo "[6/6] 서비스 상태 헬스체크 (최대 10초 대기)"

            check_service_up() {
              local service_name=$1
              local max_attempts=10
              local attempt=1
              echo "🔍 Checking $service_name..."

              while [ $attempt -le $max_attempts ]; do
                if docker-compose ps | grep "$service_name" | grep -q "Up"; then
                  echo "✅ $service_name is running (attempt $attempt)"
                  return 0
                fi
                echo "⏳ $service_name not ready (attempt $attempt)..."
                attempt=$((attempt + 1))
                sleep 1
              done

              echo "❌ $service_name failed to start within $max_attempts seconds"
              docker-compose logs $service_name
              exit 1
            }

            check_service_up crawl
            check_service_up redis
            check_service_up rabbitmq

            echo "🎉 모든 서비스가 정상 실행 중입니다!"